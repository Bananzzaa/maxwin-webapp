import React, { useState } from 'react';
import './App.css';
import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  'https://tdjtytelczdlkgahgojv.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRkanR5dGVsY3pkbGtnYWhnb2p2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcxNDMwOTQsImV4cCI6MjA2MjcxOTA5NH0.5BlORDUbpYp8rAAwacb56XrW3dtEbTarDpFtf9VsWiI'
);

const services = [
  {
    id: 'bot',
    name: 'ü§ñ Telegram-–±–æ—Ç',
    description: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è, –∑–∞—è–≤–∫–∏, —á–∞—Ç—ã, –∫–Ω–æ–ø–∫–∏, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏.',
    details: ['–û–Ω–ª–∞–π–Ω-–∫–æ–º–∞–Ω–¥—ã', '–ö–∞—Å—Ç–æ–º–Ω—ã–µ –∞–¥–º–∏–Ω–∫–∏', 'Webhook/API —Å–≤—è–∑–∫–∞'],
    image: 'https://i.imgur.com/5QnJX0w.png'
  },
  {
    id: 'webapp',
    name: 'üì± Telegram WebApp',
    description: '–ú–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ Telegram. –ú–∞–≥–∞–∑–∏–Ω—ã, –∞—É–∫—Ü–∏–æ–Ω—ã, —Ñ–æ—Ä–º—ã.',
    details: ['–ö–∞—Ç–∞–ª–æ–≥–∏ –∏ –∫–æ—Ä–∑–∏–Ω—ã', '–ü—Ä–∏–≤—è–∑–∫–∞ –∫ –±–æ—Ç—É', '–†–∞–±–æ—Ç–∞ —Å Telegram Stars'],
    image: 'https://i.imgur.com/ugMU09f.png'
  },
  {
    id: 'backend',
    name: '‚öôÔ∏è Backend/API',
    description: '–°–µ—Ä–≤–µ—Ä–Ω–∞—è –ª–æ–≥–∏–∫–∞ –Ω–∞ FastAPI, Supabase, –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏.',
    details: ['–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏', 'REST API –∏ –≤–µ–±—Ö—É–∫–∏'],
    image: 'https://i.imgur.com/lU9I4i2.png'
  },
  {
    id: 'custom',
    name: 'üí° –î—Ä—É–≥–æ–µ',
    description: '–ï—Å–ª–∏ —É —Ç–µ–±—è —á—Ç–æ-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ ‚Äî –æ–±—Å—É–¥–∏–º, –ø—Ä–∏–¥—É–º–∞–µ–º, —Å–¥–µ–ª–∞–µ–º.',
    details: ['üì¨ Telegram –¥–ª—è —Å–≤—è–∑–∏: ', '@maxwingift'],
    image: 'https://i.imgur.com/yV4XFAK.png'
  },
];

function App() {
  const [selected, setSelected] = useState(null);
  const [name, setName] = useState('');
  const [tgUser, setTgUser] = useState('');
  const [desc, setDesc] = useState('');
  const [sent, setSent] = useState(false);

  const sendOrder = async () => {
    const payload = {
      service: selected.name,
      name,
      telegram_username: tgUser,
      description: desc,
      created_at: new Date().toISOString()
    };

    const { error } = await supabase.from('orders').insert(payload);
    if (error) {
      alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.');
    } else {
      setSent(true);
    }
  };

  const cardStyle = {
    border: '1px solid #e0e0e0',
    padding: 15,
    marginBottom: 15,
    borderRadius: 16,
    cursor: 'pointer',
    backgroundColor: '#fff',
    boxShadow: '0 4px 12px rgba(0,0,0,0.05)',
    transition: 'transform 0.2s',
  };

  const inputStyle = {
    width: '100%',
    padding: '10px',
    borderRadius: '12px',
    border: '1px solid #ccc',
    marginBottom: '12px',
    fontSize: '15px'
  };

  const buttonStyle = {
    padding: '12px 20px',
    fontSize: '16px',
    borderRadius: '16px',
    backgroundColor: '#007aff',
    color: '#fff',
    border: 'none',
    cursor: 'pointer',
    marginBottom: 10
  };

  if (sent) {
    return (
      <div style={{ padding: 20, fontFamily: 'Arial', background: '#f2f2f7', minHeight: '100vh', textAlign: 'center' }}>
        <h2>‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</h2>
        <p>–ú—ã —Å–∫–æ—Ä–æ —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ–º—Å—è ‚úâÔ∏è</p>
        <button onClick={() => { setSelected(null); setSent(false); }} style={buttonStyle}>‚Üê –ù–∞–∑–∞–¥</button>
      </div>
    );
  }

  if (!selected) {
    return (
      <div style={{ padding: 20, fontFamily: 'Arial', background: '#f2f2f7', minHeight: '100vh' }}>
        <h1 style={{ fontWeight: '600', fontSize: '22px', marginBottom: 20 }}>üéØ MaxWin ‚Äî –≤—ã–±–µ—Ä–∏ —É—Å–ª—É–≥—É</h1>
        {services.map((s) => (
          <div key={s.id} onClick={() => setSelected(s)} style={cardStyle}>
            <strong>{s.name}</strong>
            <p style={{ marginTop: 6, fontSize: '14px', color: '#555' }}>{s.description}</p>
          </div>
        ))}
      </div>
    );
  }

  return (
    <div style={{ padding: 20, fontFamily: 'Arial', background: '#f2f2f7', minHeight: '100vh' }}>
      <h2 style={{ fontSize: '20px', fontWeight: '600' }}>{selected.name}</h2>
      <p style={{ fontSize: '14px', color: '#666' }}>{selected.description}</p>
      <ul style={{ fontSize: '14px', marginBottom: 10 }}>
        {selected.details.map((d, i) => (
          <li key={i}>üîπ {d}</li>
        ))}
      </ul>
      <img src={selected.image} alt="preview" style={{ width: '100%', borderRadius: '12px', marginBottom: 15 }} />

      <input style={inputStyle} placeholder="–¢–≤–æ—ë –∏–º—è" value={name} onChange={e => setName(e.target.value)} />
      <input style={inputStyle} placeholder="Telegram username" value={tgUser} onChange={e => setTgUser(e.target.value)} />
      <textarea style={inputStyle} placeholder="–û–ø–∏—à–∏ –∑–∞–¥–∞—á—É" value={desc} onChange={e => setDesc(e.target.value)} rows="4" />

      <button onClick={sendOrder} style={buttonStyle}>‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑</button><br />
      <button onClick={() => setSelected(null)} style={{ ...buttonStyle, backgroundColor: '#e0e0e0', color: '#333' }}>‚Üê –ù–∞–∑–∞–¥</button>
    </div>
  );
}

export default App;
